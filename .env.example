# Enable Django debug mode
# APP_DEBUG=True

SECRET_KEY=insecure-secret-key
LOGIN_CODE_SECRET=insecure-login-secret-key

APP_ENV=dev
APP_DEBUG=True
PUBLIC_BASE_URL=http://localhost:8087

# Comma separated list of tlds (e.g. ALLOWED_EMAIL_DOMAINS=example.com,example.org)
ALLOWED_EMAIL_DOMAINS=example.org

ADMIN_WEBSITE=https://www.thunderbird.net
ADMIN_CONTACT=dummy@example.org
SUPPORT_CONTACT=dummy@example.org

CSRF_SECURE=False
CSRF_HTTPONLY=False
# None value for this field
CSRF_TRUSTED_ORIGINS

AUTH_ALLOW_LIST=

# Django database settings (defaulting to docker-compose postgres image)
DATABASE_NAME=accounts
DATABASE_USER=accounts
DATABASE_PASSWORD=accounts
DATABASE_HOST=postgres

# Cache
REDIS_URL=redis://redis:6379
REDIS_INTERNAL_DB="0"
REDIS_CELERY_DB="5"
REDIS_CELERY_RESULTS_DB="6"
REDIS_SHARED_DB="10"

# Auth scheme
AUTH_SCHEME=oidc

IMAP_HOST=localhost
IMAP_PORT=143
IMAP_TLS=False

SMTP_HOST=localhost
SMTP_PORT=25
SMTP_TLS=False

JMAP_HOST=localhost
JMAP_PORT=443
JMAP_TLS=True

# MailChimp form URL for Wait List
WAIT_LIST_FORM_ACTION=

# Paddle integration
PADDLE_TOKEN=
PADDLE_ENV=sandbox
PADDLE_WEBHOOK_KEY=
PADDLE_API_KEY=

SENTRY_DSN=

# Celery
CELERY_BROKER=redis://redis:6379
CELERY_BACKEND=redis://redis:6379
CELERY_EAGER=False

# Zendesk (contact support form)
ZENDESK_SUBDOMAIN=
ZENDESK_USER_EMAIL=
ZENDESK_API_TOKEN=

# These can be the same if they're configured within stalwart as the same port
STALWART_BASE_JMAP_URL=http://stalwart:8081
STALWART_BASE_API_URL=http://stalwart:8080
# Bearer token auth (prefixed with api_) or basic auth (username:password base64'd)
# Defaults to admin:accounts
STALWART_API_AUTH_STRING=YWRtaW46YWNjb3VudHM=
# basic for username:password auth, or bearer for api token auth
STALWART_API_AUTH_METHOD=basic

# Keycloak's (or another oidc provider) client settings
OIDC_CLIENT_ID=tb-accounts
OIDC_CLIENT_SECRET=KoPz6llGgyFJPJvn21i3FTtBiqLj2Zbd
OIDC_URL_AUTH=http://keycloak:8999/realms/tbpro/protocol/openid-connect/auth
OIDC_URL_TOKEN=http://keycloak:8999/realms/tbpro/protocol/openid-connect/token
OIDC_URL_USER=http://keycloak:8999/realms/tbpro/protocol/openid-connect/userinfo
OIDC_URL_JWKS=http://keycloak:8999/realms/tbpro/protocol/openid-connect/certs
OIDC_URL_LOGOUT=http://keycloak:8999/realms/tbpro/protocol/openid-connect/logout
OIDC_SIGN_ALGO=RS256

# These are keycloak specific implementations, this allows access to a service account which we can use to access the api.
KEYCLOAK_URL_API=http://keycloak:8999/admin/realms/tbpro
KEYCLOAK_ADMIN_CLIENT_ID=tb-accounts-admin
KEYCLOAK_ADMIN_CLIENT_SECRET=ZR0dzKC7wQmZaiDrerUsyCzisJQfSnA7
